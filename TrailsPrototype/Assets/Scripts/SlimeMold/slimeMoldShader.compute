// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Update



public struct particle {
    float2 position;
    float heading;
};

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Shader;

float numParticles;



// Hash function www.cs.ubc.ca/~rbridson/docs/schechter-sca08-turbulence.pdf
uint hash(uint state)
{
    state ^= 2747636419u;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    return state;
}


[numthreads(16,1,1)]
void Update (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!





    Shader[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
}
